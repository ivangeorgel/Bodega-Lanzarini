Para migrar este proyecto a tu nueva computadora y crear una base de datos en MongoDB Compass que se integre con el archivo server.js, sigue estos pasos:

Paso 1: Configurar MongoDB Compass
Abrir MongoDB Compass: Inicia MongoDB Compass y conéctate a localhost:27017.
Crear la base de datos y colección:
Haz clic en "Create Database".
Dale un nombre a la base de datos, en este caso bodega (para que coincida con tu archivo server.js).
Crea una colección dentro de esta base de datos llamada contactos (esto corresponde al modelo Contacto que definiste en tu código).
Paso 2: Verificar la conexión de MongoDB en server.js
Asegúrate de que MongoDB esté en ejecución en tu máquina local. Si instalaste MongoDB correctamente, asegúrate de que el servicio esté en ejecución.
Para iniciar MongoDB manualmente, abre la terminal y escribe:
bash
Copiar código
mongod
En server.js, verifica la conexión a MongoDB:
javascript
Copiar código
mongoose.connect('mongodb://localhost:27017/bodega')
    .then(() => console.log('Conectado a MongoDB'))
    .catch(err => console.log(err));
Paso 3: Ejecutar el servidor
En la terminal, dirígete al directorio donde tienes tu proyecto y ejecuta el archivo server.js con Node.js:
bash
Copiar código
node server.js
Una vez que el servidor esté ejecutándose correctamente, debería mostrar:
less
Copiar código
Conectado a MongoDB
Servidor corriendo en http://localhost:3000
Paso 4: Probar la conexión y envío de datos
Realiza una prueba del formulario desde tu aplicación web o usa una herramienta como Postman para enviar una solicitud POST.
Envia los datos a http://localhost:3000/contacto con el siguiente cuerpo JSON:
json
Copiar código
{
    "nombre": "Juan",
    "email": "juan@example.com",
    "mensaje": "Hola, este es un mensaje de prueba."
}
Si todo funciona correctamente, el nuevo contacto debería guardarse en la colección contactos de la base de datos bodega, y deberías verlo en MongoDB Compass.
Con estos pasos, deberías poder tener tu aplicación y base de datos funcionando en la nueva computadora.